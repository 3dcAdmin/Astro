---
import shiki from 'shiki';
export interface Props {
  code: string;
  lang?: string;
  theme?: string;
  wrap?: boolean | null;
}

const { code, lang = 'plaintext', theme = 'dark-plus', wrap = false } = Astro.props;

/** Replace the shiki class name with a custom astro class name. */
function repairShikiTheme(html: string): string {
  // Replace "shiki" class naming with "astro".
  html = html.replace('<pre class="shiki"', '<pre class="astro-code"');
  // Replace "shiki" css variable naming with "astro".
  html = html.replace(/style="(background-)?color: var\(--shiki-/g, 'style="$1color: var(--astro-code-');
  // Handle code wrapping
  // if wrap=null, do nothing.
  if (wrap === false) {
    html = html.replace(/style="(.*?)"/, 'style="$1; overflow-x: auto;"');
  } else if (wrap === true) {
    html = html.replace(/style="(.*?)"/, 'style="$1; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;"');
  }
  return html;
}


const highlighter = await shiki.getHighlighter({theme});
const _html = highlighter.codeToHtml(code, lang);
html = repairShikiTheme(_html);
---
{html}
