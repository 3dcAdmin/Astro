---
import {SITE, OPEN_GRAPH} from '../config.ts';
import { SEO } from 'astro-seo';
export interface Props {
  content: any,
  site: any,
  canonicalURL: URL | string,
};
const { content = {}, canonicalURL } = Astro.props;
const formattedContentTitle = content.title ? `${content.title} ðŸš€ ${SITE.title}` : SITE.title;
const imageSrc = content?.image?.src ?? OPEN_GRAPH.image.src;
const canonicalImageSrc = new URL(imageSrc, Astro.site);
const imageAlt = content?.image?.alt ?? OPEN_GRAPH.image.alt;
---
<SEO 
  canonical={canonicalURL}
  openGraph={{
    basic: {
      title: formattedContentTitle,
      type: "article",
      image: canonicalImageSrc,
      url: canonicalURL
    },
    optional: {
      description: {content.description ? content.description : SITE.description},
      locale: {content.ogLocale ?? SITE.defaultLanguage},
      siteName: {SITE.title},
    },
    image: {
      alt: imageAlt
    },
    twitter: {
      card: "summary_large_image",
      site: {OPEN_GRAPH.twitter}
    }
  }}
/>

<!-- 
  TODO: Add json+ld data, maybe https://schema.org/APIReference makes sense? 
  Docs: https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data
  https://www.npmjs.com/package/schema-dts seems like a great resource for implementing this.
  Even better, there's a React component that integrates with `schema-dts`: https://github.com/google/react-schemaorg
-->
