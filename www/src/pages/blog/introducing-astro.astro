---
import { Markdown } from 'astro/components';
import BaseHead from '../../components/BaseHead.astro';
import BlogHeader from '../../components/BlogHeader.astro';
import BlogPost from '../../components/BlogPost.astro';
import Shell from '../../components/Shell.astro';
import Note from '../../components/Note.astro';
import BlockQuote from '../../components/BlockQuote.astro';

let title = 'Introducing Astro: Build Faster Websites';
let description = 'We\'re excited to announce Astro as a new way to build websites and deliver lightning-fast performance without sacrificing a modern developer experience.';
let publishDate = 'Tuesday, June 8 2021';
let author = 'fred';
let heroImage = '/assets/blog/introducing-astro.jpg';
let permalink = 'https://astro.build/blog/introducing-astro';
---

<html>
  <head>
    <BaseHead title={title} description={description} permalink={permalink} />
    <link rel="stylesheet" href="/blog/index.css" />
  </head>

  <body>
    <BlogHeader />

    <BlogPost title={title} author={author} heroImage={heroImage} publishDate={publishDate}>
        <Markdown>
          There's a simple secret to building a faster website — *just ship less*. 

          Unfortunately, many web frameworks trend in the opposite direction—towards *more.* More JavaScript, more features, more moving parts, and ultimately more complexity needed to keep it all running smoothly.

          We're excited to announce Astro as a new way to build websites and deliver lightning-fast performance without sacrificing a modern developer experience. To build Astro we borrowed the best parts of our favorite web frameworks and then added a few innovations of our own, including:

          - **Zero Unnecessary JavaScript:** Astro renders every page to HTML, stripping away all static, unused JavaScript for fast-as-possible site load performance in the browser.
          - **Fine-Grained Lazy Loading:** Need more than just static HTML for your site? Astro lets you toggle individual components to run in the browser, delivering JavaScript load times at a fraction of other full-stack web frameworks.
          - **Automatic `:visible` Loading:** Astro only hydrates components that enter the visible browser viewport. If the user never sees it, they won't pay the cost to load it.
          - **Bring Your Own Framework (BYOF):** Astro supports popular UI frameworks including React, Svelte, Vue, Preact, web components, or good ol' fashioned HTML + JavaScript.
          - **Fully Featured:** Astro supports TypeScript, Scoped CSS, CSS Modules, Sass, Tailwind, Markdown, MDX, and any of your favorite npm packages.
          - **SEO Baked-in:** Automatic Sitemap and RSS feed generation takes the pain out of SEO and syndication.

          We created Astro because we felt dissatisfied with the current state of web tooling. It should be easy to deliver a fast website to your users. Performance and user experience should never come at the cost of developer experience.

          ## Getting Started

          Starting a new project in Astro is easy:

          <Shell code={`
# create your project
npm init astro ./new-project-directory

# install your dependencies
cd ./new-project-directory
npm install

# start the dev server and open your browser
npm run start
`} />

          <Note>
            To learn more about Astro and start building your first site, check out our [Getting Started guide](https://github.com/snowpackjs/astro#readme)!
          </Note>
          
          ## How Astro Works

          Astro works a lot like a static site generator. If you have ever used Eleventy, Hugo, or Jekyll (or even a server-side web framework like Rails, Laravel, or Django) then you should feel right at home with Astro. 

          In Astro, you compose your website using UI components from your favorite JavaScript web framework (React, Svelte, Vue, etc). But unlike most full-stack JavaScript frameworks, Astro renders all of your UI to static HTML at build-time. The result is a fully-static HTML website with all JavaScript removed. No monolithic JavaScript application required to deploy your site, just  static HTML that loads as fast as possible in the browser regardless of how much JavaScript you used to generate it.

          Of course, sometimes client-side JavaScript is inevitable. Image carousels, shopping carts, and auto-complete search bars are just a few examples of things that require some JavaScript to run in the browser. This is where Astro really shines: When a component requires JavaScript to run in the browser, Astro only adds that one component (and any dependencies) to the final browser payload. The rest of your site continues to exist as static, lightweight HTML.

          This is no small feat. In fact, most other full-stack web frameworks make this level of per-component optimization impossible. But in Astro, it is built into the tool itself. You can even defer individual components to only load once they become visible on the page. If your user doesn't see it, they'll never need to load it.

          This new approach to web architecture is called [islands architecture](https://jasonformat.com/islands-architecture/). We didn't coin the term, but Astro may have perfected the technique. We are confident that an HTML-first, JavaScript-only-as-needed approach is the best solution for the majority of content-based websites.

          <Note>
            To learn more about Astro and start building your first site, check out our [Getting Started guide](https://github.com/snowpackjs/astro#readme)!
          </Note>

          ## Embracing the Pit of Success

          <BlockQuote author="Jeff Atwood" source="Falling Into The Pit of Success" sourceHref="https://blog.codinghorror.com/falling-into-the-pit-of-success/">
            A well-designed system makes it easy to do the right things and annoying (but not impossible) to do the wrong things
          </BlockQuote>

          It should be difficult to build a slow website. Poor performance is often framed as a failure of the developer, but we respectfully disagree. In many cases, poor performance is a failure of tooling. 

          Astro's main design principle is to lead developers into what [Rico Mariani](https://twitter.com/ricomariani) dubbed "the pit of success". It is our goal to build every site "fast by default" while also delivering a familiar, modern developer experience. 

          By building your site to static HTML by default, Astro makes it difficult (but never impossible :) to build a slow site.

          ## The road to 1.0

          This public beta launch marks a big milestone for the project. While there is still some time to go before an official v1.0 release, that doesn't mean it can't be used in production today. We've already seen several fast sites built with Astro in the wild.

          A huge thanks goes out to everyone who sought out our (only slightly) hidden Discord and tried out Astro before it was publicly available. Your feedback has been essential in shaping Astro into the tool it is today.

          If you're interested in getting involved (or just following along), [join us on Discord](https://astro.build/chat).

          ## Long-Term Sustainability

          Astro is built by the team of open source developers behind [Snowpack](https://snowpack.dev) and [Skypack](https://skypack.dev), with additional contributions from the community.

          **Astro is and always will be free.** It is an open source project released under the [MIT license](https://github.com/snowpackjs/astro/blob/main/LICENSE). 

          We care deeply about building a more sustainable future for open source software.  At the same time, we need to support Astro's development long-term. This requires money (donations alone aren't enough.) 

          We're inspired by the early success of projects like [Tailwind](https://tailwindcss.com/), [Rome](https://rome.tools/), [Remix](https://remix.run/), [Ionic](https://ionicframework.com/), and others who are experimenting with long-term financial sustainability on top of the Open Source space. Over the next year we'll be exploring how we can create a sustainable business to support a 100% free, open source Astro ****for years to come. 

          If your company is as excited about Astro as we are, we'd love to hear from you.

          <!-- [TODO ONCE DEPLOYED: FINAL CALL TO ACTION] -->
        </Markdown>
    </BlogPost>
  </body>
</html>

