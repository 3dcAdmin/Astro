name: Create a Snapshot Release

on:
  workflow_dispatch:
    inputs:
      ref: 
        description: 'The branch to create a snapshot release from.'
        required: true
        type: string
      tag:
        description: 'A one-word keyword that will be used to tag the release.'
        required: true
        type: string

defaults:
  run:
    shell: bash

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: true

jobs:
  snapshot-release:
    name: Create a snapshot release of a pull request
    if: ${{ github.repository_owner == 'withastro' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Check if user has admin access (only admins can publish snapshot releases)."

        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "admin"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm run build

      - name: Bump Package Versions
        run: npx changeset version --snapshot ${{ github.event.inputs.tag }}
        env:
          # Needs access to run the script
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        id: publish
        run: pnpm run release --tag next--${{ github.event.inputs.tag }}
        env:
          # Needs access to publish to npm
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # TODO(fks): Post an comment to the relevant Pull Request.
      # For this to work, we'll want to add a new event trigger
      # to come from a PR comment creation. Something like:
      #   "comment '!snapshot' in a PR to trigger a snapshot release!"
      # 
      # - name: Generate Notification
      #   id: notification
      #   run: message=$(node scripts/notify/index.js '${{ steps.changesets.outputs.publishedPackages }}') && echo ::set-output name=message::${message//$'\n'/'%0A'}
      #
      # - name: Pull Request Notification
      #   uses: actions/github-script@v6
      #   env:
      #     ISSUE_NUMBER: ${{ github.event.inputs.issuenum }}
      #     MESSAGE: ${{ steps.changesets.outputs.publish }}
      #   with:
      #     script: |
      #       console.log(process.env);
      #       github.rest.issues.createComment({
      #         issue_number: process.env.ISSUE_NUMBER,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: '```\n' + process.env.MESSAGE + '\n```',
      #       })
