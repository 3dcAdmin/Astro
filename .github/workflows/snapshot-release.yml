name: Create a Snapshot Release

on:
  issue_comment:
    types: [created]

defaults:
  run:
    shell: bash

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: true

jobs:
  snapshot-release:
    name: Create a snapshot release of a pull request
    if: ${{ github.repository_owner == 'withastro' && github.event.issue.pull_request && startsWith(github.event.comment.body, '!preview') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Check if user has admin access (only admins can publish snapshot releases)."
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "admin"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm run build

      - name: Extract the snapshot name from comment body
        id: get-snapshot-name
        uses: actions/github-script@v6
        with:
          script: return github.event.comment.body.split('!preview ')[1]
          result-encoding: string

      - name: Bump Package Versions
        id: changesets
        run: npx changeset version --snapshot ${{ steps.get-snapshot-name.outputs.result }}
        env:
          # Needs access to run the script
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        id: publish
        run: pnpm run release --tag next--${{ steps.get-snapshot-name.outputs.result }}
        env:
          # Needs access to publish to npm
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate Notification
        id: notification
        run: message=$(node scripts/notify/index.js '${{ steps.changesets.outputs.publishedPackages }}') && echo ::set-output name=message::${message//$'\n'/'%0A'}
      
      - name: Pull Request Notification
        uses: actions/github-script@v6
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          MESSAGE: ${{ steps.changesets.outputs.publish }}
        with:
          script: |
            console.log(process.env);
            github.rest.issues.createComment({
              issue_number: process.env.ISSUE_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '```\n' + process.env.MESSAGE + '\n```',
            })
