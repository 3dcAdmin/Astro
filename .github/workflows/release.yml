name: Release

on:
  push:
    branches:
      - main
      - "1-legacy"
      - "2-legacy"
      - "3-legacy"
      - next

defaults:
  run:
    shell: bash

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: true

jobs:
  changelog:
    if: ${{ github.repository_owner == 'withastro' }}
    name: Changelog PR or Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm run build
      
      - name: Set PUBLISH_FLAGS variable
        id: tag
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          if [ "$BRANCH_NAME" = "main" ]; then
            # do not set any flags (`latest` is the default)
            echo "PUBLISH_FLAGS=" >> $GITHUB_ENV
          elif [ "$BRANCH_NAME" = "next" ]; then
            # just use `--tag next`
            echo "PUBLISH_FLAGS=--tag next" >> $GITHUB_ENV
          else
            # extract the integer prefix from the branch name
            VERSION_NUMBER="${BRANCH_NAME%%-*}"
            # pass a shorthand tag like `--tag v3`
            echo "PUBLISH_FLAGS=--tag v$VERSION_NUMBER" >> $GITHUB_ENV
          fi

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          # Note: Run custom version script which runs pnpm install
          # the install step is necessary to refresh lockfile after versioning
          version: pnpm run version
          publish: pnpm exec changeset publish $PUBLISH_FLAGS
          commit: "[ci] release"
          title: "[ci] release"
        env:
          # Needs access to push to main
          GITHUB_TOKEN: ${{ secrets.FREDKBOT_GITHUB_TOKEN }}
          # Needs access to publish to npm
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate Announcement
        id: message
        if: steps.changesets.outputs.published == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: node .github/scripts/announce.mjs '${{ steps.changesets.outputs.publishedPackages }}'

      - name: Send message on Discord
        if: steps.changesets.outputs.published == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "${{ steps.message.outputs.DISCORD_MESSAGE }}"
